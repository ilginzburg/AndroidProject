// Generated by Dagger (https://dagger.dev).
package com.ginzburgworks.local_module;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideContextFactory implements Factory<Context> {
  private final RepositoryModule module;

  public RepositoryModule_ProvideContextFactory(RepositoryModule module) {
    this.module = module;
  }

  @Override
  public Context get() {
    return provideContext(module);
  }

  public static RepositoryModule_ProvideContextFactory create(RepositoryModule module) {
    return new RepositoryModule_ProvideContextFactory(module);
  }

  public static Context provideContext(RepositoryModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideContext());
  }
}
