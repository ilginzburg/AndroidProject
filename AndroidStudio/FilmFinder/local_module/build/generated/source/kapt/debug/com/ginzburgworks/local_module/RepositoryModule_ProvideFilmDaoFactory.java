// Generated by Dagger (https://dagger.dev).
package com.ginzburgworks.local_module;

import android.content.Context;
import com.ginzburgworks.local_module.dao.FilmDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideFilmDaoFactory implements Factory<FilmDao> {
  private final RepositoryModule module;

  private final Provider<Context> contextProvider;

  public RepositoryModule_ProvideFilmDaoFactory(RepositoryModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public FilmDao get() {
    return provideFilmDao(module, contextProvider.get());
  }

  public static RepositoryModule_ProvideFilmDaoFactory create(RepositoryModule module,
      Provider<Context> contextProvider) {
    return new RepositoryModule_ProvideFilmDaoFactory(module, contextProvider);
  }

  public static FilmDao provideFilmDao(RepositoryModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideFilmDao(context));
  }
}
